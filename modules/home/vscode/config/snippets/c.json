{
	// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"struct": {
		"prefix": "struct",
		"body": [
			"struct ${1:struct_name} {",
			"    ${2:data}",
			"};$0"
		],
		"description": "struct x{ };"
	},
	"typedef struct": {
		"prefix": "typedef_struct",
		"body": [
			"typedef struct _${1:struct_name} {",
			"    ${2:data}",
			"} $1;$0"
		],
		"description": "typedef struct _x { } x;"
	},
	"typedef": {
		"prefix": "typedef",
		"body": "typedef ${1:type} ${2:alias};$0",
		"description": "typedef type alias;"
	},
	"for-loop": {
		"prefix": "for",
		"body": [
			"for ($1; $2; $3) {",
			"    $0",
			"}"
		],
		"description": "for (; ; ) { }"
	},
	"while-loop": {
		"prefix": "while",
		"body": [
			"while ($1) {",
			"    $0",
			"}"
		]
	},
	"if-condition": {
		"prefix": "if",
		"body": [
			"if ($1) {",
			"    $2",
			"}$0"
		],
		"description": "if ( ) { }"
	},
	"elseif-condition": {
		"prefix": "elseif",
		"body": [
			"else if ($1) {",
			"    $2",
			"}$0"
		],
		"description": "else if ( ) { }"
	},
	"else": {
		"prefix": "else",
		"body": [
			"else {",
			"    $1",
			"}$0"
		]
	},
	"main": {
		"prefix": "main",
		"body": [
			"int main() {",
			"    $0",
			"    reutrn 0;",
			"}"
		]
	},
	"mains": {
		"prefix": "mains",
		"body": [
			"int main(int argc, char* argv[]) {",
			"    $0",
			"    return 0;",
			"}"
		]
	},
	"once":  {
		"prefix": "once",
		"body": [
			"#ifndef ${1:macro}",
			"#define $1",
			"",
			"$0",
			"",
			"#endif"
		]
	}
}